#include <SFML/Network.hpp>
#include <iostream>

int main() {
    sf::TcpListener listener;

    // Bind the listener to a port
    if (listener.listen(53000) != sf::Socket::Done) {
        std::cerr << "Error binding to port 53000" << std::endl;
        return -1;
    }

    std::cout << "Server is listening to port 53000, waiting for connections..." << std::endl;

    sf::TcpSocket client;
    if (listener.accept(client) != sf::Socket::Done) {
        std::cerr << "Error accepting connection" << std::endl;
        return -1;
    }

    std::cout << "Client connected: " << client.getRemoteAddress() << std::endl;

    while (true) {
        char buffer[2000];
        std::size_t received;
        if (client.receive(buffer, sizeof(buffer), received) != sf::Socket::Done) {
            std::cerr << "Error receiving data" << std::endl;
            break;
        }
        std::cout << "Received: " << std::string(buffer, received) << std::endl;

        if (client.send(buffer, received) != sf::Socket::Done) {
            std::cerr << "Error sending data" << std::endl;
            break;
        }
    }

    return 0;
}
